# Sample workflow for building and deploying a Jekyll site to GitHub Pages
name: Deploy Jekyll with GitHub Pages dependencies preinstalled

on:
  # Runs on pushes targeting the default branch
  push:
    branches: ["main", "experimental-code-rewrite"]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:
 
# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
# However, do NOT cancel in-progress runs as we want to allow these production deployments to complete.
concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  # Build job
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Set up Ruby
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: '3.1'  # Specify the Ruby version you are using
      - name: Install dependencies
        run: |
          gem install bundler
          bundle install

      - name: Checkout private repository with scripts
        env:
          PRIVATE_REPO_PAT: ${{ secrets.PRIVATE_REPO_PAT }}
          PRIVATE_REPO_GIT_URL: ${{ secrets.PRIVATE_REPO_GIT_URL }}
        run: |
          git clone https://x-access-token:${PRIVATE_REPO_PAT}@${PRIVATE_REPO_GIT_URL} private-repo
          cp private-repo/* ./_scripts
      
      - name: Run wt_generator.rb
        run: |
          ruby wt_generator.rb reborn ./_scripts src/reborn.md

      - name: List files in _scripts FOR DEBUGGING
        run: ls -la _scripts

      - name: List files in src
        run: ls -la src

      # - name: Setup Pages
      #  uses: actions/configure-pages@v5
      # - name: Build with Jekyll
      #   if: success()  # Only run if all previous steps succeeded
      #   uses: actions/jekyll-build-pages@v1
      #   with:
      #     source: ./src
      #     destination: ./_site
      # - name: Upload artifact
      #   uses: actions/upload-pages-artifact@v3

  # Deployment job
  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
